crosstalk::bscols(gg, DT::datatable(m))
ggplot(z, aes(x=blk )) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")
ggplot(z, aes(x=blk )) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")
progress %>%
filter(name == "Karl-Anthony Towns") %>%
ggplot(., aes(x = dt)) +
geom_smooth(aes(y = rollRank, col = variable), method = "lm", formula = 'y ~ x')
pct %>%
select(name,  pct) %>%
left_join(., select(pctHalf, name, gR2 = gR, pct2 = pct), by = "name") %>%
mutate(Change = pct2 - pct) %>%
left_join(., select(p2, name, pos, OFFER, Draft), by = "name") %>%
filter(pct2 >= 75) %>%
arrange(desc(Change)) %>%
View()
per %>%
select(name, gms, mp, pts) %>%
left_join(., select(per30, name,  pts2 = pts), by = "name") %>%
mutate(Change = pts2 - pts) %>%
arrange(desc(Change)) %>%
filter(mp > 8,
gms > 10) %>%
View()
ggcorrplot(cor(pct[,4:12],use = "na.or.complete"), hc.order = TRUE, type = "lower",
lab = TRUE)
ggcorrplot(cor(pct[,4:12],use = "na.or.complete"), hc.order = TRUE, lab =TRUE,
type = "lower", p.mat = cor_pmat(pct[,4:12]), insig = "blank")
ggplot()+
geom_point(data = filter(pct, pct > 75),aes(x= pts,y = tov ))+
geom_text( data = filter(pct, pct > 75),aes(x= pts,y = tov, label = name))
ggplot()+
geom_line(data = p2, aes(x= Draft, y = OFFER,linetype = Owner )) +
geom_point()
setwd("C:/Users/natha/OneDrive/Desktop/Shiny DR")
View(s2)
View(s2)
# read data ----
p <- read.xlsx("nba draft 2020.xlsx", sheet = "Draft 2020")
f <- readRDS("nba draft 2021 prices.rds")
#path = "C:/Users/Nate/Desktop/fantasy bball/Fantasy_by_Nate_Dogg"
path = "C:/Users/natha/OneDrive/Desktop/Fantasy_by_Nate_Dogg/data"
setwd(path)
getwd()
list.files()
# read data ----
p <- read.xlsx("nba draft 2020.xlsx", sheet = "Draft 2020")
f <- readRDS("nba draft 2021 prices.rds")
d <- readRDS("box scores 2020.rds")
s <- readRDS("depth charts 2021.rds")
b <- readRDS("bios.rds")
# draft cleanup 20 ----
p2 <-
p %>%
mutate(name  =ifelse(
substring(PLAYER,nchar(gsub(",.*$","",PLAYER))-3,nchar(gsub(",.*$","",PLAYER)))=="Utah",
str_squish(substring(PLAYER, 1, nchar(gsub(",.*$", "", PLAYER))-4) ),
str_squish(substring(PLAYER, 1, nchar(gsub(",.*$", "", PLAYER))-3) ))) %>%
mutate(pos = str_squish(gsub(".*,","",PLAYER) )) %>%
mutate(team = ifelse(
substring(PLAYER,nchar(gsub(",.*$","",PLAYER))-3,nchar(gsub(",.*$","",PLAYER)))=="Utah",
str_squish(substring(PLAYER,nchar(gsub(",.*$","",PLAYER))-4,nchar(gsub(",.*$","",PLAYER)))),
str_squish(substring(PLAYER,nchar(gsub(",.*$","",PLAYER))-2,nchar(gsub(",.*$","",PLAYER)))))) %>%
mutate(name = str_squish(gsub("JJ","J.J.",gsub("III","",gsub(" Jr.","",name)))))
# game logs 20 ----
d2 <-
d %>%
filter(dt >= '2019-10-22',
dt <= '2020-08-15') %>%
mutate_at(.,vars(-dt),list(~ifelse(grepl("Did Not Play",.),as.character(NA),.))) %>%
mutate_at(.,vars(4:22),list(~as.numeric(.))) %>%
mutate_at(.,vars(starts_with("MP")),list(~sapply(strsplit(MP,":"),
function(x) {
x <- as.numeric(x)
round(x[1]+x[2]/60,2)
}))) %>%
mutate(gp = ifelse(replace_na(MP,0),1,0) )   %>%
left_join(.,  d  %>%
filter(dt >= '2019-10-22',
dt <= '2020-08-15') %>%
distinct(boxLink, tm, dt) %>%
group_by(tm) %>%
arrange(dt) %>%
mutate(gm = row_number())%>%
ungroup() %>%
select(tm,dt, gm)  , by = c("tm" , "dt")) %>%
mutate(name = case_when (  grepl("Jok",         Player)  ~ "Nikola Jokic",
grepl("la Vu",       Player)  ~ "Nikola Vucevic",
grepl("Luka D",      Player)  ~ "Luka Doncic",
grepl("Jonas V",     Player)  ~ "Jonas Valanciunas",
grepl("Bojan Bog",   Player)  ~ "Bojan Bogdanovic",
grepl("Kristaps P",  Player)  ~ "Kristaps Porzingis",
grepl("Goran D",     Player)  ~ "Goran Dragic",
grepl("Dario ",      Player)  ~ "Dario Saric",
grepl("Dennis Sch",  Player)  ~ "Dennis Schroder",
grepl("Bogdan Bog",  Player)  ~ "Bogdan Bogdanovic",
grepl("Jusuf Nur",   Player)  ~ "Jusuf Nurkic",
grepl("Boban Marj",  Player)  ~ "Boban Marjanovic",
grepl("vis Bert",    Player)  ~ "Davis Bertans",
grepl("Juan Hernang",Player)  ~ "Juan Hernangomez",
grepl("Willy Hernang",Player) ~ "Willy Hernangomez",
grepl("Satoransk",   Player)  ~ "Tomas Satoransky",
grepl("Cristiano F", Player)  ~ "Cristiano Felicio",
grepl("Luwawu-Caba", Player)  ~ "Timothe Luwawu-Cabarrot",
grepl(" Melli", Player)       ~ "Nicolo Melli",
grepl("anan Musa", Player)    ~ "Dzanan Musa",
TRUE              ~  Player))
# PerG     ----
per <-
d2  %>%
group_by(name) %>%
summarise(gms = sum(gp),
gSt = sum(Started, na.rm = T),
gR = sum(gp)/n_distinct(boxLink),
mp = mean(MP,na.rm = TRUE),
fg = mean(FG,na.rm = TRUE),
fgA = mean(FGA,na.rm = TRUE),
fgR = mean(`FG%`,na.rm = TRUE),
three = mean(`3P`,na.rm = TRUE),
threeA = mean(`3PA`,na.rm = TRUE),
threeR = mean(`3P%`,na.rm = TRUE),
ft = mean(FT,na.rm = TRUE),
fta = mean(FTA,na.rm = TRUE),
ftR = mean(`FT%`,na.rm = TRUE),
orb = mean(ORB,na.rm = TRUE),
drb = mean(DRB,na.rm = TRUE),
trb = mean(TRB,na.rm = TRUE),
ast = mean(AST,na.rm = TRUE),
stl = mean(STL,na.rm = TRUE),
blk = mean(BLK,na.rm = TRUE),
tov = mean(TOV,na.rm = TRUE),
pf = mean(PF,na.rm = TRUE),
pts = mean(PTS,na.rm = TRUE),
plusMinus = mean(`+/-`,na.rm = TRUE)
)    %>%
mutate_at(vars(-c(1:3)),list(~round(.,2)))%>%
mutate(Starter = ifelse(gSt / gms >= .5, 1,0)) %>%
left_join(., select(p2, name, pos, OFFER, Draft, Owner), by = "name") %>%
left_join(.,
d2 %>%
group_by(name) %>%
arrange(desc(dt)) %>%
slice(1 ) %>%
select(name, LastTm = tm),by = "name")
# PerG %     ----
pct <-
per %>%
filter(mp >= 12) %>%
mutate(gR = ntile(gR, 100),
mp = ntile(mp, 100),
fgR = ntile(fgR, 100),
three = ntile(three, 100),
ftR = ntile(ftR, 100),
trb = ntile(trb, 100),
ast = ntile(ast, 100),
stl = ntile(stl, 100),
blk = ntile(blk, 100),
tov = ntile(tov, 100),
pts = ntile(pts, 100)
) %>%
mutate(tov = 100 - tov) %>%
mutate(ptsTov = ntile(tov + pts, 100),
shoot = ntile(fgR + three + ftR, 100),
fgFt = ntile(fgR + ftR, 100),
stock = ntile(stl + blk,100),
def = ntile(trb + stl + blk,100),
stockFgFt = ntile(fgR + ftR + stl + blk, 100) ,
bigEz  = ntile(pts + fgR + trb + ast + stl + blk, 100),
guard  = ntile(pts + ftR + three + stl + ast, 100) ) %>%
mutate(tot = fgR + three + ftR + trb + ast + stl + blk + tov + pts) %>%
mutate(pct =  ntile(tot, 100) ) %>%
arrange(desc(tot)) %>%
mutate(rank = row_number()) %>%
arrange(desc(bigEz)) %>%
mutate(rankBigEz = row_number()) %>%
select(name,gR,mp,fgR,three,ftR,trb,ast,stl,blk,tov,pts, ptsTov, shoot, fgFt, stock,
def, stockFgFt, bigEz, guard, tot, pct, rank, rankBigEz)%>%
left_join(., select(p2, name, pos, OFFER, Draft), by = "name") %>%
mutate(ratio =  round(pct /OFFER,1))
# PerG 1st Half     ----
half1 <-
d2  %>%
filter(gm <= 30) %>%
group_by(name) %>%
summarise(gms = sum(gp),
gSt = sum(Started, na.rm = T),
gR = sum(gp)/n_distinct(boxLink),
mp = mean(MP,na.rm = TRUE),
fg = mean(FG,na.rm = TRUE),
fgA = mean(FGA,na.rm = TRUE),
fgR = mean(`FG%`,na.rm = TRUE),
three = mean(`3P`,na.rm = TRUE),
threeA = mean(`3PA`,na.rm = TRUE),
threeR = mean(`3P%`,na.rm = TRUE),
ft = mean(FT,na.rm = TRUE),
fta = mean(FTA,na.rm = TRUE),
ftR = mean(`FT%`,na.rm = TRUE),
orb = mean(ORB,na.rm = TRUE),
drb = mean(DRB,na.rm = TRUE),
trb = mean(TRB,na.rm = TRUE),
ast = mean(AST,na.rm = TRUE),
stl = mean(STL,na.rm = TRUE),
blk = mean(BLK,na.rm = TRUE),
tov = mean(TOV,na.rm = TRUE),
pf = mean(PF,na.rm = TRUE),
pts = mean(PTS,na.rm = TRUE),
plusMinus = mean(`+/-`,na.rm = TRUE)
)    %>%
mutate_at(vars(-c(1:3)),list(~round(.,2)))
# PerG 1st Half %     ----
pctHalf1 <-
half1 %>%
filter(mp >= 12) %>%
mutate(gR = ntile(gR, 100),
mp = ntile(mp, 100),
fgR = ntile(fgR, 100),
three = ntile(three, 100),
ftR = ntile(ftR, 100),
trb = ntile(trb, 100),
ast = ntile(ast, 100),
stl = ntile(stl, 100),
blk = ntile(blk, 100),
tov = ntile(tov, 100),
pts = ntile(pts, 100)
) %>%
mutate(tov = 100 - tov) %>%
mutate(ptsTov = ntile(tov + pts, 100),
shoot = ntile(fgR + three + ftR, 100),
fgFt = ntile(fgR + ftR, 100),
stock = ntile(stl + blk,100),
def = ntile(trb + stl + blk,100),
stockFgFt = ntile(fgR + ftR + stl + blk, 100) ) %>%
mutate(tot = fgR + three + ftR + trb + ast + stl + blk + tov + pts) %>%
mutate(pct =  ntile(tot, 100) ) %>%
arrange(desc(tot)) %>%
mutate(rank = row_number()) %>%
select(name,gR,mp,fgR,three,ftR,trb,ast,stl,blk,tov,pts, ptsTov, shoot, fgFt, stock,
def, stockFgFt, tot, pct, rank)
# PerG 2nd Half     ----
half2 <-
d2  %>%
filter(gm >= 31) %>%
group_by(name) %>%
summarise(gms = sum(gp),
gSt = sum(Started, na.rm = T),
gR = sum(gp)/n_distinct(boxLink),
mp = mean(MP,na.rm = TRUE),
fg = mean(FG,na.rm = TRUE),
fgA = mean(FGA,na.rm = TRUE),
fgR = mean(`FG%`,na.rm = TRUE),
three = mean(`3P`,na.rm = TRUE),
threeA = mean(`3PA`,na.rm = TRUE),
threeR = mean(`3P%`,na.rm = TRUE),
ft = mean(FT,na.rm = TRUE),
fta = mean(FTA,na.rm = TRUE),
ftR = mean(`FT%`,na.rm = TRUE),
orb = mean(ORB,na.rm = TRUE),
drb = mean(DRB,na.rm = TRUE),
trb = mean(TRB,na.rm = TRUE),
ast = mean(AST,na.rm = TRUE),
stl = mean(STL,na.rm = TRUE),
blk = mean(BLK,na.rm = TRUE),
tov = mean(TOV,na.rm = TRUE),
pf = mean(PF,na.rm = TRUE),
pts = mean(PTS,na.rm = TRUE),
plusMinus = mean(`+/-`,na.rm = TRUE)
)    %>%
mutate_at(vars(-c(1:3)),list(~round(.,2)))
# PerG 2nd Half %     ----
pctHalf2 <-
half2 %>%
filter(mp >= 12) %>%
mutate(gR = ntile(gR, 100),
mp = ntile(mp, 100),
fgR = ntile(fgR, 100),
three = ntile(three, 100),
ftR = ntile(ftR, 100),
trb = ntile(trb, 100),
ast = ntile(ast, 100),
stl = ntile(stl, 100),
blk = ntile(blk, 100),
tov = ntile(tov, 100),
pts = ntile(pts, 100)
) %>%
mutate(tov = 100 - tov) %>%
mutate(ptsTov = ntile(tov + pts, 100),
shoot = ntile(fgR + three + ftR, 100),
fgFt = ntile(fgR + ftR, 100),
stock = ntile(stl + blk,100),
def = ntile(trb + stl + blk,100),
stockFgFt = ntile(fgR + ftR + stl + blk, 100) ) %>%
mutate(tot = fgR + three + ftR + trb + ast + stl + blk + tov + pts) %>%
mutate(pct =  ntile(tot, 100) ) %>%
arrange(desc(tot)) %>%
mutate(rank = row_number()) %>%
select(name,gR,mp,fgR,three,ftR,trb,ast,stl,blk,tov,pts, ptsTov, shoot, fgFt, stock,
def, stockFgFt, tot, pct, rank)
# Per30      ----
per30 <-
d2  %>%
group_by(name) %>%
summarise(gms = sum(gp),
gSt = sum(Started, na.rm = T),
gR = sum(gp)/n_distinct(boxLink),
mp = sum(MP,na.rm = TRUE),
fg = sum(FG,na.rm = TRUE),
fgA = sum(FGA,na.rm = TRUE),
fgR = sum(`FG%`,na.rm = TRUE),
three = sum(`3P`,na.rm = TRUE),
threeA = sum(`3PA`,na.rm = TRUE),
threeR = sum(`3P%`,na.rm = TRUE),
ft = sum(FT,na.rm = TRUE),
ftA = sum(FTA,na.rm = TRUE),
ftR = sum(`FT%`,na.rm = TRUE),
orb = sum(ORB,na.rm = TRUE),
drb = sum(DRB,na.rm = TRUE),
trb = sum(TRB,na.rm = TRUE),
ast = sum(AST,na.rm = TRUE),
stl = sum(STL,na.rm = TRUE),
blk = sum(BLK,na.rm = TRUE),
tov = sum(TOV,na.rm = TRUE),
pf = sum(PF,na.rm = TRUE),
pts = sum(PTS,na.rm = TRUE),
plusMinus = sum(`+/-`,na.rm = TRUE)
)    %>%
mutate(mp30 = mp / 30) %>%
mutate_at(vars(fg, fgA, three, threeA, ft, ftA, orb, drb, trb, ast, stl, blk, tov,
pf, pts, plusMinus), list(~ . / mp30)) %>%
mutate_at(vars(-c(1:3)),list(~round(.,2))) %>%
select(name, gms, gSt, gR, mp, mp30, everything())
# Per30 %     ----
pct30 <-
per30 %>%
filter(mp >= 12) %>%
mutate(gR = ntile(gR, 100),
mp = ntile(mp, 100),
fgR = ntile(fgR, 100),
three = ntile(three, 100),
ftR = ntile(ftR, 100),
trb = ntile(trb, 100),
ast = ntile(ast, 100),
stl = ntile(stl, 100),
blk = ntile(blk, 100),
tov = ntile(tov, 100),
pts = ntile(pts, 100)
) %>%
mutate(tov = 100 - tov) %>%
mutate(ptsTov = ntile(tov + pts, 100),
shoot = ntile(fgR + three + ftR, 100),
fgFt = ntile(fgR + ftR, 100),
stock = ntile(stl + blk,100),
def = ntile(trb + stl + blk,100),
stockFgFt = ntile(fgR + ftR + stl + blk, 100) ,
bigEz  = ntile(pts + fgR + trb + ast + stl + blk, 100),
guard  = ntile(pts + ftR + three + stl + ast, 100) ) %>%
mutate(tot = fgR + three + ftR + trb + ast + stl + blk + tov + pts) %>%
mutate(pct =  ntile(tot, 100) ) %>%
arrange(desc(tot)) %>%
mutate(rank = row_number()) %>%
arrange(desc(bigEz)) %>%
mutate(rankBigEz = row_number()) %>%
select(name,gR,mp,fgR,three,ftR,trb,ast,stl,blk,tov,pts, ptsTov, shoot, fgFt, stock,
def, stockFgFt, bigEz, guard, tot, pct, rank, rankBigEz)%>%
left_join(., select(p2, name, pos, OFFER, Draft), by = "name") %>%
mutate(ratio =  round(pct /OFFER,1))
# Z score     ----
z <-
per %>%
filter(mp >= 12) %>%
mutate(gR =  (gR - mean(gR)) / sd(gR)   ,
mp = (mp - mean(mp)) / sd(mp) ,
fgR = (fgR - mean(fgR)) / sd(fgR) ,
three = (three - mean(three)) / sd(three) ,
ftR = ifelse(ftR %in% c( 0 ,  NaN ),
0,
(ftR - mean(ftR,na.rm=T)) / sd(ftR,na.rm=T) ) ,
trb = (trb - mean(trb)) / sd(trb) ,
ast = (ast - mean(ast)) / sd(ast) ,
stl = (stl - mean(stl)) / sd(stl) ,
blk = (blk - mean(blk)) / sd(blk) ,
tov = (tov - mean(tov)) / sd(tov) ,
pts = (pts - mean(pts)) / sd(pts)) %>%
mutate(tov = -1* tov) %>%
mutate(ptsTov = ntile(tov + pts, 100),
shoot = ntile(fgR + three + ftR, 100),
fgFt = ntile(fgR + ftR, 100),
stock = ntile(stl + blk,100),
def = ntile(trb + stl + blk,100),
stockFgFt = ntile(fgR + ftR + stl + blk, 100) ,
bigEz  = ntile(pts + fgR + ast + trb + stl + blk, 100),
guard  = ntile(pts + ftR + three + stl + ast, 100) ) %>%
mutate(tot = fgR + three + ftR + trb + ast + stl + blk + tov + pts) %>%
mutate(pct =  ntile(tot, 100) ) %>%
arrange(desc(tot)) %>%
mutate(rank = row_number()) %>%
arrange(desc(bigEz)) %>%
mutate(bigEz = row_number()) %>%
select(name,gR,mp,fgR,three,ftR,trb,ast,stl,blk,tov,pts, ptsTov, shoot,
fgFt, stock, def, stockFgFt,    guard, tot, pct, rank,pos, OFFER, Draft
)%>%
mutate(ratio =  round(pct /OFFER,1))  %>%
mutate_at(vars(-c(name, pos,OFFER, Draft)), list(~round(.,2)))
# Progress ----
progress <-
d2 %>%
filter(!is.na(MP) ) %>%
filter(name %in% per[which(per$gms >= 10),]$name) %>%
select(name, PTS, `3P`, TRB, AST, STL, BLK, MP,  dt) %>%
gather(variable,value,-c(name,dt)) %>%
arrange(dt) %>%
group_by(name, variable) %>%
mutate(rollAvg = c(rep(NA, 10 - 1), rollmean(value, 10)) ) %>%
ungroup() %>%
group_by(dt) %>%
mutate(rollRank = round(percent_rank(rollAvg),2)) %>%
filter(!is.na(rollRank)) %>%
ungroup() %>%
arrange( dt, variable, desc(rollRank))
# Correlation ----
corr <-
cor(pct[,4:12],use = "na.or.complete") %>%
data.frame() %>%
rownames_to_column(., "stat") %>%
gather(stat2,relationship, -stat  ) %>%
filter(stat2 != stat) %>%
group_by(relationship) %>%
filter(row_number() == 1)%>%
ungroup() %>%
arrange(relationship)
# Starter Summary ----
s2 <-
s %>%
#filter(depth <= 1) %>%
select(tm, pos, depth, name) %>%
left_join(., select(per, name, NewStarter = Starter, LastOffer = OFFER, LastTm),
by = "name")%>%
mutate(NewStarter = abs(1 - replace_na(NewStarter,0) )) %>%
left_join(., select(f, name, NewOffer = SALARY, posElig= Pos), by = "name") %>%
mutate(NewOffer = as.numeric(NewOffer)) %>%
mutate(OfferChg =  NewOffer  -  LastOffer ,
NewTeam = ifelse(tm != LastTm, 1,0)) %>%
left_join(.,select(pct, name, rank, rankBigEz, pct), by = "name") %>%
group_by(pos) %>%
arrange(rank) %>%
mutate(posRank = row_number()) %>%
ungroup() %>%
mutate(off2Rank = round( NewOffer  /  posRank ,1)) %>%
left_join(.,select(pctHalf1, name, h1rank = rank, h1pct =  pct), by = "name") %>%
group_by(pos) %>%
arrange(h1rank) %>%
mutate(h1posRank = row_number()) %>%
ungroup() %>%
left_join(.,select(pctHalf2, name, h2rank = rank, h2pct =  pct), by = "name") %>%
group_by(pos) %>%
arrange(h2rank) %>%
mutate(h2posRank = row_number()) %>%
ungroup() %>%
mutate(rankChg = replace_na(h1rank,0) - replace_na(h2rank,0)) %>%
left_join(.,select(pct30, name, pct30rank = rank, h2pct =  pct), by = "name") %>%
group_by(pos) %>%
arrange(pct30rank) %>%
mutate(pct30posRank = row_number()) %>%
ungroup() %>%
left_join(.,select(z, name, zTot = tot ), by = "name") %>%
left_join(.,b, by = "name") %>%
select(tm,pos,depth, name, rank, h2rank, h1rank,rankChg, pct30rank, posRank,h2posRank,
h1posRank, pct30rank,zTot, rankBigEz, NewTeam, NewStarter, NewOffer,LastOffer,
OfferChg, off2Rank, posElig, LastTm, Age, IN, WT, BMI, body, Exp, draftYr,
pickOvr)
View(f)
path = "C:/Users/natha/OneDrive/Desktop/Fantasy_by_Nate_Dogg"
setwd(path)
source("clean 2021.r")
View(f)
View(s2)
# Read Data ----
saveRDS(b, "data/b.rds")        ## Player Bios
setwd("C:/Users/natha/OneDrive/Desktop/Shiny DR")
#setwd("C:/Users/natha/OneDrive/Desktop/Shiny DR")
# Read Data ----
saveRDS(b, "data/b.rds")        ## Player Bios
saveRDS(corr, "data/corr.rds")    ## Correlation dataframes
saveRDS(d, "data/d.rds")       ## raw game logs
saveRDS(d2, "data/d2.rds")       ## cleaned game logs
saveRDS(f, "data/f.rds")        ## new draft offers
saveRDS(half1, "data/half1.rds")    ## raw first half numbers
saveRDS(half2, "data/half2.rds")    ## raw second half numbers
saveRDS(p, "data/p.rds")        ## raw fantasy draft numbers
saveRDS(p2, "data/p2.rds")       ## clean fantasy draft numbers
saveRDS(pct, "data/pct.rds")      ## percentile numbers
saveRDS(pct30, "data/pct30.rds")    ## per30 percentile numbers
saveRDS(pctHalf1, "data/pctHalf1.rds") ## first half percentile numbers
saveRDS(pctHalf2, "data/pctHalf2.rds") ## second half percentile numbers
saveRDS(per, "data/per.rds")      ## per game numbers
saveRDS(per30, "data/per30.rds")    ## per30 numbers
saveRDS(progress, "data/progress.rds") ## in season progress
saveRDS(s, "data/s.rds")        ## raw depth charts
saveRDS(s2, "data/s2.rds")       ## clean depth charts
saveRDS(z, "data/z.rds")        ## z scores
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
